const { BrandCar } = require("../model/model");

const brandCarController = {
    // üü¢ Th√™m h√£ng xe
    addBrandCar: async (req, res) => {
        try {
            const newBrandCar = new BrandCar(req.body);
            const savedBrandCar = await newBrandCar.save();
            res.status(200).json(savedBrandCar);
        } catch (error) {
            res.status(500).json({ error: error.message });
        }
    },

    // üü¢ L·∫•y t·∫•t c·∫£ h√£ng xe
    getAllBrandCar: async (req, res) => {
        try {
            const allBrandCar = await BrandCar.find();
            res.status(200).json(allBrandCar);
        } catch (error) {
            res.status(400).json({ error: error.message });
        }
    },

    // üü¢ L·∫•y m·ªôt h√£ng xe theo ID
    getBrandCarById: async (req, res) => {
        try {
            const { id } = req.params;
            const brandCar = await BrandCar.findById(id);
            if (!brandCar) {
                return res.status(404).json({ error: "H√£ng xe kh√¥ng t·ªìn t·∫°i" });
            }
            res.status(200).json(brandCar);
        } catch (error) {
            res.status(500).json({ error: error.message });
        }
    },

    // üü¢ C·∫≠p nh·∫≠t th√¥ng tin h√£ng xe
    updateBrandCar: async (req, res) => {
        try {
            const updatedBrand = await BrandCar.findByIdAndUpdate(
                req.params.id,
                { $set: req.body },
                { new: true }
            );

            if (!updatedBrand) {
                return res.status(404).json({ error: "Kh√¥ng t√¨m th·∫•y d√≤ng xe" });
            }

            res.status(200).json(updatedBrand);
        } catch (error) {
            console.error("L·ªói khi c·∫≠p nh·∫≠t:", error);
            res.status(400).json({ error: error.message });
        }
    },

    // üü¢ X√≥a h√£ng xe
    deleteBrandCar: async (req, res) => {
        try {
            const { id } = req.params;
            const deletedBrandCar = await BrandCar.findByIdAndDelete(id);
            if (!deletedBrandCar) {
                return res.status(404).json({ error: "H√£ng xe kh√¥ng t·ªìn t·∫°i" });
            }
            res.status(200).json({ message: "X√≥a th√†nh c√¥ng" });
        } catch (error) {
            res.status(500).json({ error: error.message });
        }
    }
};

module.exports = brandCarController;
